name: Set-up LDC to target macOS ARM64
description: Adds a working arm64-apple-macos target to LDC.

runs:
  using: composite
  steps:
    - name: Install Clang
      shell: bash
      run: sudo apt-get install -y clang lld

    - name: Set-up macOS cross-compilation
      shell: bash
      run: |
        mkdir -p $HOME/.ldc/
        LDC_VERSION=$(ldc2 --version | head -n 1 | grep -oE "[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*")
        curl -LO https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.0.sdk.tar.xz
        tar -xf ./MacOSX11.0.sdk.tar.xz -C $HOME
        cp $(dirname $(which ldc2))/../etc/ldc2.conf $HOME/.ldc/ldc2.conf
        cat << EOF | tee $HOME/.ldc/ldc2.conf
        "arm64-apple-macos":
        {
            // default switches injected before all explicit command-line switches
            switches = [
                "-gcc=clang",
                "-linker=lld-15",
                "-Xcc=-target",
                "-Xcc=arm64-apple-macos",
                "-Xcc=-isysroot",
                "-Xcc=$HOME/MacOSX11.0.sdk",
                "-Xcc=-F",
                "-Xcc=$HOME/ldc2-$LDC_VERSION-osx-arm64/lib",
                "-Xcc=-mmacosx-version-min=12.6",
                "-L=-platform_version",
                "-L=macos",
                "-L=12.6.0",
                "-L=0.0.0",
                "-defaultlib=phobos2-ldc,druntime-ldc",
            ];
            // default switches appended after all explicit command-line switches
            post-switches = [
                "-I$HOME/ldc2-$LDC_VERSION-osx-arm64/import",
            ];
            // default directories to be searched for libraries when linking
            lib-dirs = [
                "$HOME/ldc2-$LDC_VERSION-osx-arm64/lib",
            ];
        };
        EOF
        mkdir $HOME/ldc-macos
        curl -LO https://github.com/ldc-developers/ldc/releases/download/v$LDC_VERSION/ldc2-$LDC_VERSION-osx-arm64.tar.xz
        tar -xf ./ldc2-$LDC_VERSION-osx-arm64.tar.xz -C $HOME
